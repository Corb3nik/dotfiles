# Set terminal
set-option -g default-terminal "screen-256color"

# Command history
set -g history-limit 10000

# Renumber windows upon deletion
set-option -g renumber-windows on

# Remove tmux esc-key wait time
set -s escape-time 0

# Remap leader to C-l
unbind C-b
set -g prefix C-l
bind C-l send-prefix

# Shorten command delay
set -sg escape-time 1

# Set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Use PREFIX j/k to split window vertically
bind - split-window -v

# Use PREFIX h/l to split window horizontally
bind | split-window -h

# Use current working directory for split panes and windows
bind c new-window -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
setw -g aggressive-resize on

# Map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Bind synchronize panes
bind i set synchronize-panes

# ---------------------
# Copy & Paste
# ---------------------
# Provide access to the clipboard for pbpaste, pbcopy
set-option -g default-command "reattach-to-user-namespace -l bash"
set-window-option -g automatic-rename on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# setup 'y' to copy selection as in Vim
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of 'Enter' to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

# ---------------------
# Status Bar
# ---------------------
# Remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# If run as "tmux attach", create a session if one does not already exist
new-session -n "bash"
